// =====================================================
// ==================== class names ====================
// =====================================================

// only one value
$width: '.width';
$hidden: '.hidden';

// can put several values
$container: '.container';
$row: '.row';
$external-gutter: '.external-gutter';
$column: '.column';
$clearfix: '.clearfix';
$order: '.order';

// =====================================================
// ====================== options ======================
// =====================================================

// Support
$ie8-9-support: true;
$moz-lt-27-support: true; //  /!\ need modernizr with flexbox detection /!\

// CSS options
$box-sizing-border-box-on-every-element: true;

// =====================================================
// ===================== variables =====================
// =====================================================


$main-layout: 'md';
$columns-number: 12;
$column-gutter: 20px;
$container-max-width: 960px;
$container-align: center; // center, left or right
$how-many-elements-to-order: 5; // order propriety for flex display

$bigger-layouts-name:                 'lg',                     'xl';// ascending order
$bigger-layouts-media-queries:        '(min-width: 1024px)',    '(min-width: 1200px)';
$bigger-layouts-columns-number:       12,                       12;
$bigger-layouts-column-gutter:        20px,                     40px;
$bigger-layouts-container-max-width:  1100px,                   1600px;

$smaller-layouts-name:                 'xs',                    'sm';// ascending order
$smaller-layouts-media-queries:        '(max-width: 480px)',    '(max-width: 767px)';
$smaller-layouts-columns-number:       12,                      12;
$smaller-layouts-column-gutter:        10px,                    20px;
$smaller-layouts-container-max-width:  767px,                   960px;

// =====================================================
// ==================== grid system ====================
// =====================================================

@if $box-sizing-border-box-on-every-element == true {
  * {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
  }
  *:before, *:after {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
  }
}

$bigger-layouts: zip($bigger-layouts-name, $bigger-layouts-media-queries, $bigger-layouts-columns-number, $bigger-layouts-column-gutter, $bigger-layouts-container-max-width);
$smaller-layouts: zip($smaller-layouts-name, $smaller-layouts-media-queries, $smaller-layouts-columns-number, $smaller-layouts-column-gutter, $smaller-layouts-container-max-width);

$all-layouts: join($bigger-layouts, reverse($smaller-layouts));

$media-queries: join( $smaller-layouts-media-queries , $bigger-layouts-media-queries );

@if $moz-lt-27-support or $ie8-9-support {
  #{$clearfix} {
    &:before,
    &:after {
        content: " ";
        display: table;
        display: -webkit-flex;
        display: -ms-flexbox;
        display: flex;
    }

    &:after {
        clear: both;
    }
  }
}

#{$container} {
  max-width: $container-max-width;
  @if $container-align == center {
  margin: 0 auto;
  } @else if $container-align == right {
  margin: 0 0 0 auto;
  }
  padding-left: $column-gutter / 2;
  padding-right: $column-gutter / 2;
}

#{$row} {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  
  margin-left: - $column-gutter / 2;
  margin-right: - $column-gutter / 2;
  
  @if $moz-lt-27-support or $ie8-9-support {
    @extend #{$clearfix};
  }
}

@if $moz-lt-27-support {
  .no-flexbox #{$row} {
    display: block;
  }
}

#{$external-gutter} {
  margin-left: $column-gutter / 2;
  margin-right: $column-gutter / 2;
}

#{$column} {
  padding-left: $column-gutter / 2;
  padding-right: $column-gutter / 2;
  @if $moz-lt-27-support or $ie8-9-support {
  min-height: 1px;
  float: left;
  }
  @if $box-sizing-border-box-on-every-element == false {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
  }
}

@for $i from 1 through $columns-number {
  #{$width}#{$i}of#{$columns-number}--#{$main-layout} {
    width: 100% / $columns-number * $i;
  }
}

@for $i from 1 through $how-many-elements-to-order {
  #{$order}#{$i}--#{$main-layout} {
    order: #{$i};
  }
}

@each $layout in $all-layouts {
  
  @if (nth($layout, 1)) {
  
    @media only screen and #{nth($layout, 2)} {

      #{$container} {
        max-width: nth($layout, 5);
        padding-left: - (nth($layout, 4) / -2);
        padding-right: - (nth($layout, 4) / -2);
      }
      
      #{$row} {
        margin-left: - (nth($layout, 4) / 2);
        margin-right: - (nth($layout, 4) / 2);
      }
      
      #{$external-gutter} {
        margin-left: - (nth($layout, 4) / -2);
        margin-right: - (nth($layout, 4) / -2);
      }
      
      #{$column} {
        padding-left: - (nth($layout, 4) / -2);
        padding-right: - (nth($layout, 4) / -2);
      }

      @for $i from 1 through nth($layout, 3) {
        #{$width}#{$i}of#{nth($layout, 3)}--#{nth($layout, 1)} {
          width: 100% / nth($layout, 3) * $i;
        }
      }

      @for $i from 1 through $how-many-elements-to-order {
        .order#{$i}--#{nth($layout, 1)} {
          order: #{$i};
        }
      }

      #{$hidden}--#{nth($layout, 1)} {
        display: none;
      }
    }

  }

}

/*
body:before {
  content: '"' + $media-queries + '"';
}
*/
