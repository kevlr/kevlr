// Grid System
$mobile-first: false; // true or false
$wrapper-max-width: 960px;
$wrapper-min-width: 320px;
$wrapper-align: center; // center, left or right
$columns-number: 12;

$layouts-names: 'tablet', 'mobile'; // ascending if mobile first or descending if not mobile-first / null if not responsive
$layouts-breakpoints: 780px, 480px;
$min-and-max-width: true, false;
$layout-wrapper-width: null, 320px; // in pixels / null if fluid
$layout-columns-number: 12, 12;

// Column style

$padding: 20px 10px;
$margin: 10px;
$border-top: 1px solid #000; // null if none
$border-right: 1px solid #000; // null if none
$border-bottom: 1px solid #000; // null if none
$border-left: 1px solid #000; // null if none
$column-bg: null; // null if none

@if length($padding) == 1 {
	$padding: nth($padding, 1), nth($padding, 1), nth($padding, 1), nth($padding, 1);
} @else if length($padding) == 2 {
	$padding: nth($padding, 1), nth($padding, 2), nth($padding, 1), nth($padding, 2);
} @else if length($padding) == 3 {
	$padding: nth($padding, 1), nth($padding, 2), nth($padding, 3), nth($padding, 2);
}

@if length($margin) == 1 {
	$margin: nth($margin, 1), nth($margin, 1), nth($margin, 1), nth($margin, 1);
} @else if length($margin) == 2 {
	$margin: nth($margin, 1), nth($margin, 2), nth($margin, 1), nth($margin, 2);
} @else if length($margin) == 3 {
	$margin: nth($margin, 1), nth($margin, 2), nth($margin, 3), nth($margin, 2);
}

html {
	font-size: 62.5%;
	font-family: sans-serif;
}

/* Clearfix */

.clearfix:before,
.clearfix:after {
    content:"";
    display:table;
}
.clearfix:after {
    clear:both;
}

.wrapper {
	@if $layouts-names {
	max-width: $wrapper-max-width;
	min-width: $wrapper-min-width;
	} @else {
	width: $wrapper-max-width;
	}
	@if $wrapper-align == center {
	margin: 0 auto;
	} @else if $wrapper-align == right {
	margin: 0 0 0 auto;
	}
}

/* Wrapper clearfix */

.wrapper:before,
.wrapper:after {
    content:"";
    display:table;
}
.wrapper:after {
    clear:both;
}

.column {
	float: left;
}

.column-style {
	padding: nth($padding, 1) nth($padding, 2) nth($padding, 3) nth($padding, 4);
	margin: nth($margin, 1) nth($margin, 2) nth($margin, 3) nth($margin, 2);
    @if $border-top {
		border-top: $border-top;
	}
	@if $border-right {
		border-right: $border-right;
	}
	@if $border-bottom {
		border-bottom: $border-bottom;
	}
	@if $border-left {
		border-left: $border-left;
	}
	@if $column-bg {
		background: $column-bg;
	}
}

// Padding

.base-padding {
	padding: $padding;
}

.h-padding {
	padding-left: nth($padding, 4);
	padding-right: nth($padding, 2);
}

.v-padding {
	padding-top: nth($padding, 1);
	padding-bottom: nth($padding, 3);
}

.top-padding {
	padding-top: nth($padding, 1);
}

.right-padding {
	padding-right: nth($padding, 2);
}

.bottom-padding {
	padding-bottom: nth($padding, 3);
}

.left-padding {
	padding-left: nth($padding, 4);
}

// Margin

.base-margin {
	margin: $margin;
}

.h-margin {
	margin-left: nth($padding, 4);
	margin-right: nth($padding, 2);
}

.v-margin {
	margin-top: nth($padding, 1);
	margin-bottom: nth($padding, 3);
}

.top-margin {
	margin-top: nth($padding, 1);
}

.right-margin {
	margin-right: nth($padding, 2);
}

.bottom-margin {
	margin-bottom: nth($padding, 3);
}

.left-margin {
	margin-left: nth($padding, 4);
}

// Border

.base-border {
	border-top: $border-top;
	border-right: $border-right;
	border-bottom: $border-bottom;
	border-left: $border-left;
}

.h-border {
	border-left: $border-left;
	border-right: $border-right;
}

.v-border {
	border-top: $border-top;
	border-bottom: $border-bottom;
}

.top-border {
	border-top: $border-top;
}

.right-border {
	border-right: $border-right;
}

.bottom-border {
	border-bottom: $border-bottom;
}

.left-border {
	border-left: $border-left;
}

@if $mobile-first == false {
	$first-layout: 'wide';
} @else {
	$first-layout: 'mobile';
}

.left {
	float: left;
}

.right {
	float: right;
}

@for $i from 1 through $columns-number {
	.#{$first-layout + '-' + $i} {
		width: (100% / $columns-number * $i) + 0.00001;
	}
}
@if $layouts-names {
	@for $i from 1 through length($layouts-names) {
		@if ($mobile-first == false and nth($min-and-max-width, $i) == false) or $i == length($layouts-names) {
			$media-queries: '(max-width:' + nth($layouts-breakpoints, $i)	+ ')';
		} @else if $mobile-first == false and nth($min-and-max-width, $i) == true {
			$media-queries: '(min-width:' + (nth($layouts-breakpoints, $i + 1) + 1) + ') and (max-width:' + nth($layouts-breakpoints, $i) + ')';
		} @else if ($mobile-first == true and nth($min-and-max-width, $i) == false) or $i == length($layouts-names) {
			$media-queries: '(min-width:' + nth($layouts-breakpoints, $i) + ')';
		} @else if $mobile-first == true and nth($min-and-max-width, $i) == true {
			$media-queries: '(min-width:' + (nth($layouts-breakpoints, $i)) + ') and (max-width:' + (nth($layouts-breakpoints, $i + 1) - 1) + ')';
		}
		@media only screen and #{$media-queries} {
			@if nth($layout-wrapper-width, $i) {
				.wrapper {
					width: nth($layout-wrapper-width, $i);
				}
			}
			@for $j from 1 through nth($layout-columns-number, $i) {
				.#{nth($layouts-names, $i) + '-' + $j} {
					width: (100% / nth($layout-columns-number, $i) * $j) + 0.00001;
				}
			}
		}
	}
}