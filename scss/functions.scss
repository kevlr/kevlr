// ===============================================================
// ==================== mixins and functions =====================
// ===============================================================

// ===================================
// ============= mixins ==============
// ===================================

@mixin rem($propr, $px) {
	#{$propr}: $px;
	#{$propr}: $px / 16px * 1rem;
}

@mixin media($layout-name) {
	@each $layout in $all-layouts {
		@if (nth($layout, 1) == $layout-name) {
			@media #{$media-queries-rules} and (min-width: nth($layout, 2)) {
				@content;
			}
		}
	}
}

$all-layouts: zip($larger-layouts-name, $larger-layouts-media-queries, $larger-layouts-columns-number, $larger-layouts-column-gutter, $larger-layouts-container-max-width);

@mixin gutter($type, $directions, $ratio: 1) {
	@each $direction in $directions {
		#{$type}-#{$direction}: $column-gutter * $ratio;
	}
	@each $layout in $all-layouts {
		@media #{$media-queries-rules} and (min-width: nth($layout, 2)) {
			@each $direction in $directions {
				#{$type}-#{$direction}: nth($layout, 4) * $ratio;
			}
		}
	}
}

// ===================================
// ============ functions ============
// ===================================

@function fourvalues($values) {
	@if length($values) == 1 {
		@return nth($values, 1) nth($values, 1) nth($values, 1) nth($values, 1);
	} @elseif length($values) == 2 {
		@return nth($values, 1) nth($values, 2) nth($values, 1) nth($values, 2);
	} @elseif length($values) == 3 {
		@return nth($values, 1) nth($values, 2) nth($values, 3) nth($values, 2);
	}
	@return $values;
}

@function increase($values, $increaseby: 0 0 0 0, $top:0, $right:0, $bottom:0, $left:0) {
	$values: fourvalues($values);
	$increaseby: fourvalues($increaseby);
	$top: nth($values, 1) + nth($increaseby, 1);
	$right: nth($values, 2) + nth($increaseby, 2);
	$bottom: nth($values, 3) + nth($increaseby, 3);
	$left: nth($values, 4) + nth($increaseby, 4);
	@if $top == $right and $top == $bottom and $top == $left {
		@return $top;
	} @elseif $top == $bottom and $right == $left {
		@return $top $right;
	} @elseif $right == $left {
		@return $top $right $bottom;
	} @else {
		@return $top $right $bottom $left;
	}
}
