// ===============================================================
// ========================= grid system =========================
// ===============================================================

// ===================================
// ========== general style ==========
// ===================================


@if $box-sizing-border-box-on-every-element == true {
	* {
		-webkit-box-sizing: border-box;
		-moz-box-sizing: border-box;
		box-sizing: border-box;
	}
	*:before, *:after {
		-webkit-box-sizing: border-box;
		-moz-box-sizing: border-box;
		box-sizing: border-box;
	}
}

// ========== float and clear ==========

.left {
  float: left;
}

.right {
  float: right;
}

%clearfix {
	&:before,
	&:after {
			content: " ";
			display: table;
			display: -webkit-flex;
			display: -ms-flexbox;
			display: flex;
	}

	&:after {
			clear: both;
	}
}

.clearfix {
	width: 100%;
	@extend %clearfix;
}

// ===================================
// =========== main layout ===========
// ===================================

body {
	background-color: $primary-bg-color;
}

// ========== main layout container ==========

.container {
	@if nth($layouts-container-max-width, 1) != none {
	max-width: nth($layouts-container-max-width, 1);
	}
	min-width: $container-min-width;
	@if $container-align == center {
	margin: 0 auto;
	} @else if $container-align == right {
	margin: 0 0 0 auto;
	}
}

// ========== main layout row ==========

.row {
	display: -webkit-flex;
	display: -ms-flexbox;
	display: flex;
	
	@if $moz22-27-support {
		@supports not (flex-wrap: wrap) {
			display: block;
		}
	}
	
	-webkit-flex-wrap: wrap;
	-ms-flex-wrap: wrap;
	flex-wrap: wrap;
	
	-webkit-align-items: flex-start;
	-ms-flex-align: start;
	align-items: flex-start;
	
	@if $ie8-9-support or $moz22-27-support {
		@extend %clearfix;
	}
}

// ========== flex options ==========

// order

@for $i from nth($elements-to-order, 1) through nth($elements-to-order, 2) {
	.order#{$i} {
		-webkit-order: #{$i};
		-ms-flex-order: #{$i};
		order: #{$i};
	}
}

// baseline align

.baseline-valign {
	-webkit-align-items: baseline;
	-ms-flex-align: baseline;
	align-items: baseline;
}

// bottom align

.bottom-valign {
	-webkit-align-items: flex-end;
	-ms-flex-align: end;
	align-items: flex-end;
}

// center align

.center-valign {
	-webkit-align-items: center;
	-ms-flex-align: center;
	align-items: center;
}

// equal height

.equal-height {
	-webkit-align-items: stretch;
	-ms-flex-align: stretch;
	align-items: stretch;
	> .column {
		display: -webkit-flex;
		display: -ms-flexbox;
		display: flex;

		@if $moz22-27-support {
			@supports not (flex-wrap: wrap) {
				display: block;
			}
		}

		-webkit-flex-wrap: wrap;
		-ms-flex-wrap: wrap;
		flex-wrap: wrap;
	}
}

// ========== display ==========

.inline {
	display: inline;
}

.inline-block {
	display: inline-block;
}

.flex {
	display: -webkit-flex;
	display: -ms-flexbox;
	display: flex;
	
	@if $moz22-27-support {
		@supports not (flex-wrap: wrap) {
			display: block;
		}
	}
}

// ========== text alignment ==========

.text-left {
	text-align: left;
}

.text-right {
	text-align: right;
}

.text-center {
	text-align: center;
}

// ========== visibility ==========

.hidden {
	display: none !important;
}

// ===================================
// ========== media queries ==========
// ===================================

@for $i from 1 through length($all-layouts) {
    
    @if ( $i == 1 ) {
    
        .double-marge {
            margin-left: nth($layouts-column-gutter, $i) / 2;
            margin-right: nth($layouts-column-gutter, $i) / 2;
        }

        .no-marge {
            margin-left: nth($layouts-column-gutter, $i) / -2;
            margin-right: nth($layouts-column-gutter, $i) / -2;
        }

        // ========== main layout columns ==========

        .column {
            padding-left: nth($layouts-column-gutter, $i) / 2;
            padding-right: nth($layouts-column-gutter, $i) / 2;
            width: 100%;
            @if $ie8-9-support or $moz22-27-support {
            min-height: 1px;
            float: left;
            }
            @if $box-sizing-border-box-on-every-element == false {
                -webkit-box-sizing: border-box;
                -moz-box-sizing: border-box;
                box-sizing: border-box;
            }
        }

        // columns width

        @for $j from 1 through nth($layouts-columns-number, $i) {
            .width#{$j} {
                width: 100% / nth($layouts-columns-number, $i) * $j;
            }
        }

        // columns offset

        @for $j from 1 through nth($layouts-columns-number, $i) {
            .offset#{$j} {
                margin-left: 100% / nth($layouts-columns-number, $i) * $j;
            }
        }
        
    } @else {

        @include media(nth($layouts-name, $i)) {

            // ========== responsive container ==========

            .container {
                max-width: nth($layouts-container-max-width, $i);
            }

            // ========== responsive row ==========

            .double-marge {
                margin-left: nth($layouts-column-gutter, $i) / 2;
                margin-right: nth($layouts-column-gutter, $i) / 2;
            }

            .no-marge {
                margin-left: -(nth($layouts-column-gutter, $i) / 2);
                margin-right: -(nth($layouts-column-gutter, $i) / 2);
            }

            // ========== responsive columns ==========

            .column {
                padding-left: (nth($layouts-column-gutter, $i) / 2);
                padding-right: (nth($layouts-column-gutter, $i) / 2);
            }

            // columns width

            @for $j from 1 through nth($layouts-columns-number, $i) {
                .width#{$j}_#{nth($layouts-name, $i)} {
                    width: 100% / nth($layouts-columns-number, $i) * $j;
                }
            }

            // columns offset

            @for $j from 1 through nth($layouts-columns-number, $i) {
                .offset#{$j}_#{nth($layouts-name, $i)} {
                    margin-left: 100% / nth($layouts-columns-number, $i) * $j;
                }
            }

            // ========== responsive flex options ==========

            // responsive order

            @for $j from nth($elements-to-order, 1) through nth($elements-to-order, 2) {
                .order#{$j}_#{nth($layouts-name, $i)} {
                    -webkit-order: #{$j};
                    -ms-flex-order: #{$j};
                    order: #{$j};
                }
            }

            // responsive text alignment

            .text-left_#{nth($layouts-name, $i)} {
                text-align: left;
            }

            .text-right_#{nth($layouts-name, $i)} {
                text-align: right;
            }

            .text-center_#{nth($layouts-name, $i)} {
                text-align: center;
            }

            // ========== responsive visibility ==========

            .hidden_#{nth($layouts-name, $i)} {
                display: none !important;
            }

            .visible_#{nth($layouts-name, $i)} {
                display: block !important;

                &.inline {
                    display: inline !important;
                }

                &.inline-block {
                    display: inline-block !important;
                }

                &.flex,
                &.row {
                    display: -webkit-flex !important;
                    display: -ms-flexbox !important;
                    display: flex !important;

                    @if $moz22-27-support {
                        @supports not (flex-wrap: wrap) {
                            display: block !important;
                        }
                    }
                }
            }
        }
        
    }

}
