// ===============================================================
// =========================== mixins ============================
// ===============================================================

@mixin rem($propr, $px) {
	#{$propr}: $px;
	#{$propr}: $px / 16px * 1rem;
}

@mixin media($layout-name) {
	@each $layout in $all-layouts {
		@if (nth($layout, 1) == $layout-name) {
			@media only screen and (min-width: nth($layout, 2)) {
				@content;
			}
		}
    
        @if ($ie8-layout == $layout-name and ie8-support == true) {
			.ie8 {
				@content;
			}
		}
	}
}

$all-layouts: zip($layouts-name, $layouts-media-queries, $layouts-columns-number, $layouts-column-gutter, $layouts-container-max-width);

@mixin gutter($type, $directions, $ratio: 1) {
	@each $direction in $directions {
		#{$type}-#{$direction}: nth($layouts-column-gutter, 1) * $ratio;
	}
	@for $i from 2 through length($all-layouts) {
		@media only screen and (min-width: nth($layouts-media-queries, $i)) {
			@each $direction in $directions {
				#{$type}-#{$direction}: nth($layouts-column-gutter, $i) * $ratio;
			}
		}
	}
}

@mixin responsive-font-size($size) {
	@for $i from 1 through length($layouts-name) {
		@if $i == 1 {
				@include rem(font-size, nth(nth($size, $i),1));
            
				@if length(nth($size, $i)) == 2 {
					line-height: nth(nth($size, $i),2);
				}
		} @else {
			@include media(nth($layouts-name, $i)) {
				@include rem(font-size, nth(nth($size, $i),1));
                
				@if length(nth($size, $i)) == 2 {
					line-height: nth(nth($size, $i+1),2);
				}
			}
		}
	}
}